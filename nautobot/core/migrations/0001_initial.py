# Generated by Django 3.2.16 on 2023-01-11 22:12

import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import nautobot.core.fields
import nautobot.core.models.mixins
import nautobot.extras.utils
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name="Tag",
                    fields=[
                        ("name", models.CharField(max_length=100, unique=True)),
                        ("slug", models.SlugField(allow_unicode=True, max_length=100, unique=True)),
                        (
                            "id",
                            models.UUIDField(
                                default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                            ),
                        ),
                        ("created", models.DateField(auto_now_add=True, null=True)),
                        ("last_updated", models.DateTimeField(auto_now=True, null=True)),
                        (
                            "_custom_field_data",
                            models.JSONField(
                                blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder
                            ),
                        ),
                        ("color", nautobot.core.fields.ColorField(default="9e9e9e", max_length=6)),
                        ("description", models.CharField(blank=True, max_length=200)),
                        (
                            "content_types",
                            models.ManyToManyField(
                                limit_choices_to=nautobot.extras.utils.TaggableClassesQuery(),
                                related_name="tags",
                                to="contenttypes.ContentType",
                            ),
                        ),
                    ],
                    options={
                        "ordering": ["name"],
                    },
                    bases=(models.Model, nautobot.core.models.mixins.NotesMixin),
                ),
                migrations.CreateModel(
                    name="TaggedItem",
                    fields=[
                        (
                            "id",
                            models.UUIDField(
                                default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                            ),
                        ),
                        ("object_id", models.UUIDField()),
                        (
                            "content_type",
                            models.ForeignKey(
                                on_delete=django.db.models.deletion.CASCADE,
                                related_name="core_taggeditem_tagged_items",
                                to="contenttypes.contenttype",
                            ),
                        ),
                        (
                            "tag",
                            models.ForeignKey(
                                on_delete=django.db.models.deletion.CASCADE,
                                related_name="core_taggeditem_items",
                                to="core.tag",
                            ),
                        ),
                    ],
                    options={
                        "index_together": {("content_type", "object_id")},
                    },
                ),
            ],
            database_operations=[],
        ),
    ]
