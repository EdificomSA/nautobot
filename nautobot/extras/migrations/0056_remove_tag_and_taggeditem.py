# Generated by Django 3.2.16 on 2023-01-11 22:12

from django.db import migrations, models
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ("ipam", "0009_repoint_tag_from_extras_to_core"),
        ("dcim", "0024_repoint_tag_from_extras_to_core"),
        ("circuits", "0010_repoint_tag_from_extras_to_core"),
        ("virtualization", "0012_repoint_tag_from_extras_to_core"),
        ("core", "0001_initial"),
        ("tenancy", "0004_alter_tenant_tags"),
        ("extras", "0055_alter_joblogentry_scheduledjob_webhook_fields"),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.AlterIndexTogether(
                    name="taggeditem",
                    index_together=None,
                ),
                migrations.RemoveField(
                    model_name="taggeditem",
                    name="content_type",
                ),
                migrations.RemoveField(
                    model_name="taggeditem",
                    name="tag",
                ),
                migrations.AlterField(
                    model_name="configcontext",
                    name="tags",
                    field=models.ManyToManyField(
                        blank=True, related_name="_extras_configcontext_tags_+", to="core.Tag"
                    ),
                ),
                migrations.AlterField(
                    model_name="gitrepository",
                    name="tags",
                    field=taggit.managers.TaggableManager(through="core.TaggedItem", to="core.Tag"),
                ),
                migrations.AlterField(
                    model_name="job",
                    name="tags",
                    field=taggit.managers.TaggableManager(through="core.TaggedItem", to="core.Tag"),
                ),
                migrations.AlterField(
                    model_name="secret",
                    name="tags",
                    field=taggit.managers.TaggableManager(through="core.TaggedItem", to="core.Tag"),
                ),
                migrations.DeleteModel(
                    name="Tag",
                ),
                migrations.DeleteModel(
                    name="TaggedItem",
                ),
            ],
            database_operations=[
                migrations.AlterModelTable(
                    name="Tag",
                    table="core_tag",
                ),
                migrations.AlterModelTable(
                    name="TaggedItem",
                    table="core_taggeditem",
                ),
            ],
        ),
    ]
